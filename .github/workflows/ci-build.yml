name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  configuration: Release
  productNamespacePrefix: "DynamicData"

jobs:
  build:
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:        
    - name: Get Current Visual Studio Information
      shell: bash
      run: |
        dotnet tool update -g dotnet-vs
        echo "## About RELEASE ##"
        vs where release

    - name: Update Visual Studio Latest Release
      shell: bash
      run: |
        echo "## Update RELEASE ##"
        vs update release Enterprise
        vs modify release Enterprise +mobile +desktop +uwp +web
        echo "## About RELEASE Updated ##"
        vs where release
        echo "##vso[task.prependpath]$(vs where release --prop=InstallationPath)\MSBuild\Current\Bin"
        
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    - name: Install .NET 6 & .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
            6.0.x
            7.0.x

    - name: NBGV
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1
      with:
        vs-prerelease: true
        
    - name: NuGet Restore
      run: msbuild /t:restore /v:minimal /m
      working-directory: src
      
    - name: Build
      run: msbuild /t:build,pack /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=${{ env.configuration }}
      working-directory: src
      
    - name: Run Unit Tests and Generate Coverage
      uses: glennawatson/coverlet-msbuild@v2.1
      with:
        project-files: '**/*Tests*.csproj'
        no-build: true
        exclude-filter: '[${{env.productNamespacePrefix}}.*.Tests.*]*'
        include-filter: '[${{env.productNamespacePrefix}}*]*'
        output-format: cobertura
        configuration: ${{ env.configuration }}

    - name: Upload Code Coverage
      uses: codecov/codecov-action@v3

    - name: Create NuGet Artifacts
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'
